#For the impatient or expert user:
#
# You could run the entire workflow by running the following scripts in
# succession:
#
# 	./xpreparatory
# 	./xwork
# 	./xcleanup
# 	./xdettsr
#
# (in fact, you could run all the above in one script, provided you have
#  the appropriate definition of $rws as an environmental variable; see
#  message at the end of the xpreparatory script).
#
# More prudent and educational might to be read on below, where we have
# annotated the workflow steps.


#We need to get the genome files set up before we can do anything else:
#
cd HsGENOME
source 0README
cd ..

#The downloads/stripeseq directory contains empty files with names corresponding#to the real read data files on our system.
#To reproduce our analyses, you must populate the directory with the real goods.

#The file samples.tsv assumes implicitely that the read data are accessible
#in the download/stripeseq directory under the listed file name prefixes.

#Let's set up a template Makefile to run the workflow:
#
sed -e "s#{RAWREAD1}.fq#{RAWREAD1}.fastq.gz#; s#{RAWREAD2}.fq#{RAWREAD2}.fastq.gz#;" ../GoSTRIPES/templates/Makefile_Sc >  Makefile_Hs
sed -i -e "s#ScGENOME#HsGENOME#; s#Saccharomyces_cerevisiae.R64-1-1.dna_sm.toplevel.fa#Homo_sapiens.GRCh38.dna_sm.primary_assembly.fa#; s#Saccharomyces_cerevisiae.R64-1-1.98.gtf#Homo_sapiens.GRCh38.98.chr.gtf#; s#Sc_rRNA.fa#Hs_rRNA.fa#; s#scrubSAMfile_OPTIONS  = -s 3 -i 50 -I 1000 -t 1500#scrubSAMfile_OPTIONS  = -s 3 -i 50 -I 100000 -t 100500#;" Makefile_Hs
sed -i -e '/samtools index ${SAMPLE}.bam/a \\tsamtools view -bh ${SAMPLE}.bam \\\n\t\t"1" "2" "3" "4" "5" "6" "7" "8" "9" "10" "11" "12" \\\n\t\t"13" "14" "15" "16" "17" "18" "19" "20" "21" "22" "X" "Y" \\\n\t\t> ${SAMPLE}.chr.bam\n\tsamtools index ${SAMPLE}.chr.bam' Makefile_Hs
#NOTE: The last edit sets up the *chr.bam files for TSS processing on
#      the assembled nuclear chromosomes only.


#And now we set up the sample directories to get the work done:
#
sed -e "s#EXPERIMENT=demo#EXPERIMENT=GSF2268#; s#{READFILESTEM\[i\]}_R1#{READFILESTEM[i]}_R1_001#; s#{READFILESTEM\[i\]}_R2#{READFILESTEM[i]}_R2_001#; s#Makefile_Sc#Makefile_Hs#; " ../GoSTRIPES/templates/xsetup_samples >  xsetup_samples
chmod a+x xsetup_samples
#NOTE: You should adjust the Makefile parameters to choices that are appropriate
#      for your system. As provided, the workflow will run with 8 cores.
./xsetup_samples

#Ok, one more absolutely necessary preparatory step:
#
echo "We must set the rws variable again, as we have moved the gostripes.simg images."
echo "Execute the following (or equivalent) in your working shell:"
echo ""
echo "source ../GoSTRIPES/bin/xworkStripes -b `pwd` -i `pwd`/../gostripes.simg" 
echo ""

#Now for the real work:
#
sed -e "s#EXPERIMENT=demo#EXPERIMENT=GSF2268#; " ../GoSTRIPES/templates/xrun_samples >  xrun_samples
chmod a+x xrun_samples
#NOTE: This should take several hours.
./xrun_samples

#Cleaning up:
#
sed -e "s#EXPERIMENT=demo#EXPERIMENT=GSF2268#; " ../GoSTRIPES/templates/xcleanup_samples >  xcleanup_samples
sed -i -e 's/${samplelabel}.bam/${samplelabel}.chr.bam/' xcleanup_samples
#NOTE: The last edit selects the *chr.bam files for TSS processing in the
#      next workflow step.
chmod a+x xcleanup_samples
#
#NOTE: This will remove temporary files and archive others, greatly reducing
#      disk space usage.
#
./xcleanup_samples
../xsummarize_alignments

#NOW:
#
# - you will have records of what was done in the sample directories (see err
#   and logfiles/*).
#
# - having run the xsummarize_alignments script should have created the
#   tab-delimited file ProcessingAndAlignmentResults.tsv, which summarizes
#   the numbers of reads and alignments at the various stages of processing,
#   from initial input to final alignments used for the next workflow step
#
# - you should find in this directory bamfiles.tsv, which tabulates the samples
#   and location of the generated *.bam alignment files. bamfiles.tsv can be
#   used as input to TSRchitect for the next workflow step: identification of
#   TSS and TSR; see directory tsr and instructions tsr/0Record.
#
(echo "... changing into directory 'tsr' and executing 'xrunwfHs all' with"; \
 echo "    a TSRchitect singularity image ..."; \
	cd tsr && \
	singularity pull -F --name tsr.simg shub://BrendelGroup/TSRchitect && \
 	singularity exec -e -B ../ tsr.simg ./xrunwfHs all; \
echo "... all done; please see tsr/0Record for more ways to explore the"; \
echo "    output data"\
)
